# Generated by Django 4.2.7 on 2025-09-18 10:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schedule', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('absence_type', models.CharField(choices=[('unjustified', 'Non justifiée'), ('medical', 'Médicale'), ('family', 'Familiale'), ('personal', 'Personnelle'), ('transportation', 'Transport'), ('other', 'Autre')], default='unjustified', max_length=20)),
                ('reason', models.TextField(help_text="Raison détaillée de l'absence")),
                ('justification_document', models.FileField(blank=True, help_text='Document justificatif (PDF, image ou document Word)', null=True, upload_to='justifications/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvée'), ('rejected', 'Rejetée'), ('auto_approved', 'Auto-approuvée')], default='pending', max_length=15)),
                ('is_makeup_required', models.BooleanField(default=False)),
                ('makeup_completed', models.BooleanField(default=False)),
                ('absence_date', models.DateField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('justification_deadline', models.DateTimeField(blank=True, null=True)),
                ('admin_comments', models.TextField(blank=True, help_text="Commentaires de l'administration")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absence_app_approved_absences', to=settings.AUTH_USER_MODEL)),
                ('reported_by', models.ForeignKey(help_text="Qui a signalé l'absence (étudiant ou enseignant)", on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_reported_absences', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='schedule.schedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-absence_date', '-created_at'],
                'unique_together': {('student', 'schedule')},
            },
        ),
        migrations.CreateModel(
            name='AbsencePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('max_unjustified_absences', models.IntegerField(default=3, help_text="Nombre maximum d'absences non justifiées")),
                ('max_total_absences_percentage', models.DecimalField(decimal_places=2, default=25.0, help_text="Pourcentage maximum d'absences totales", max_digits=5)),
                ('justification_deadline_hours', models.IntegerField(default=48, help_text='Délai en heures pour justifier une absence')),
                ('makeup_request_deadline_days', models.IntegerField(default=7, help_text='Délai en jours pour demander un rattrapage')),
                ('medical_justification_required', models.BooleanField(default=True)),
                ('family_emergency_accepted', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentAbsenceStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_absences', models.IntegerField(default=0)),
                ('justified_absences', models.IntegerField(default=0)),
                ('unjustified_absences', models.IntegerField(default=0)),
                ('pending_absences', models.IntegerField(default=0)),
                ('absence_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('justified_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('pending_makeups', models.IntegerField(default=0)),
                ('completed_makeups', models.IntegerField(default=0)),
                ('failed_makeups', models.IntegerField(default=0)),
                ('is_at_risk', models.BooleanField(default=False)),
                ('risk_level', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyen'), ('high', 'Élevé'), ('critical', 'Critique')], default='low', max_length=10)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_statistics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MakeupSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('makeup_date', models.DateField()),
                ('makeup_start_time', models.TimeField()),
                ('makeup_end_time', models.TimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Programmée'), ('confirmed', 'Confirmée'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('rescheduled', 'Reprogrammée')], default='scheduled', max_length=15)),
                ('attendance_confirmed', models.BooleanField(default=False)),
                ('session_notes', models.TextField(blank=True, help_text='Notes de la session de rattrapage')),
                ('student_feedback', models.TextField(blank=True, help_text="Retour de l'étudiant")),
                ('teacher_feedback', models.TextField(blank=True, help_text="Retour de l'enseignant")),
                ('makeup_grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_successful', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('absence', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='makeup_session', to='absences.absence')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absence_app_confirmed_makeups', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_makeup_sessions', to='core.room')),
                ('scheduled_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_scheduled_makeups', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_makeup_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-makeup_date', '-makeup_start_time'],
            },
        ),
        migrations.CreateModel(
            name='AttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', 'Présent'), ('absent', 'Absent'), ('late', 'En retard'), ('excused', 'Excusé'), ('left_early', 'Parti tôt')], default='present', max_length=15)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('minutes_late', models.IntegerField(default=0)),
                ('minutes_early_departure', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('is_validated', models.BooleanField(default=False)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absence_app_recorded_attendances', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='schedule.schedule')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='absence_app_validated_attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-schedule__week_start', 'schedule__start_time'],
                'unique_together': {('student', 'schedule')},
            },
        ),
    ]
